{"ast":null,"code":"var _jsxFileName = \"/home/george/projects/beads/beads/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport './Canvas.css';\nimport { connect } from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition } from '../actions/rootActions';\n\nfunction mapStateToProps(state) {\n  return {\n    beads: state.beads,\n    brushPosition: state.brushPosition\n  };\n}\n\n;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    placeBead: beads => dispatch(placeBead(beads)),\n    setBrushPosition: xy => dispatch(setBrushPosition(xy))\n  };\n}\n\nfunction getBeadHash(x, y) {\n  return x + \" \" + y;\n}\n\nclass ConnectedCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.intervalId = 0;\n    this.state = {\n      intervalId: 0\n    };\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this.snap = this.snap.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.printBeads = this.printBeads.bind(this);\n  }\n\n  snap(numToRound, multiple) {\n    if (multiple == 0) return numToRound;\n    var remainder = numToRound % multiple;\n    if (remainder == 0) return numToRound;\n    return numToRound + multiple - remainder;\n  }\n\n  brush() {\n    var size = 10;\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y; // x = this.snap(x, 10);\n    // y = this.snap(y, 10);\n\n    return React.createElement(Bead, {\n      x: x,\n      y: y,\n      width: size,\n      height: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }\n\n  mouseDown() {\n    this.setState({\n      intervalId: setInterval(this.placeObject, 100)\n    });\n  }\n\n  mouseUp() {\n    clearInterval(this.state.intervalId);\n  }\n\n  placeObject(e) {\n    console.log(this.props.beads); // var beads = Object.assign({}, this.props.beads);\n\n    let beads = JSON.parse(JSON.stringify(this.props.beads));\n    var size = 10;\n    console.log(this.props.brushPosition);\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y; // x = this.snap(x, 10);\n    // y = this.snap(y, 10);\n\n    beads[getBeadHash(x, y)] = React.createElement(Bead, {\n      x: x,\n      y: y,\n      width: size,\n      height: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n    this.props.placeBead(beads);\n  }\n\n  _onMouseMove(e) {\n    var size = 10;\n    var x = e.clientX - size;\n    var y = e.clientY - size;\n    x = this.snap(x, size / 2);\n    y = this.snap(y, size);\n    this.props.setBrushPosition({\n      x: x,\n      y: y\n    });\n  }\n\n  printBeads() {\n    for (var key in this.props.beads) {\n      console.log(this.props.beads[key]);\n    }\n\n    return \"\";\n  }\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      className: \"Canvas\",\n      id: \"canvas\",\n      onMouseMove: this._onMouseMove // onMouseDown={this.mouseDown}\n      // onMouseUp={this.mouseUp}\n      ,\n      onClick: this.placeObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.printBeads(), this.brush());\n  }\n\n}\n\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\nexport default Canvas;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/components/Canvas.js"],"names":["React","Component","connect","Bead","placeBead","setBrushPosition","mapStateToProps","state","beads","brushPosition","mapDispatchToProps","dispatch","xy","getBeadHash","x","y","ConnectedCanvas","constructor","props","intervalId","placeObject","bind","_onMouseMove","snap","mouseUp","mouseDown","printBeads","numToRound","multiple","remainder","brush","size","setState","setInterval","clearInterval","e","console","log","JSON","parse","stringify","clientX","clientY","key","render","Canvas"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Canvas.css';\nimport {connect} from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition } from '../actions/rootActions';\n\nfunction mapStateToProps(state) {\n  return {\n      beads: state.beads,\n      brushPosition: state.brushPosition\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      placeBead: (beads) => dispatch(placeBead(beads)),\n      setBrushPosition: (xy) => dispatch(setBrushPosition(xy))\n  }\n}\n\nfunction getBeadHash(x, y){\n  return x + \" \" + y;\n}\n\nclass ConnectedCanvas extends Component {\n\n  constructor(props) {\n    super(props);\n    this.intervalId = 0;\n    this.state = { intervalId: 0};\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this.snap = this.snap.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.printBeads = this.printBeads.bind(this);\n  }\n\n  snap(numToRound, multiple)\n  {\n    if (multiple == 0)\n        return numToRound;\n\n    var remainder = numToRound % multiple;\n    if (remainder == 0)\n        return numToRound;\n\n    return numToRound + multiple - remainder;\n  }\n\n  brush(){\n    var size = 10;\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y;\n\n    // x = this.snap(x, 10);\n    // y = this.snap(y, 10);\n    return (<Bead x={x} y={y} width={size} height={size}/>);\n  }\n\n  mouseDown(){\n    this.setState({intervalId: setInterval(this.placeObject, 100)});\n  }\n\n  mouseUp(){\n    clearInterval(this.state.intervalId);\n  }\n\n  placeObject(e){\n    console.log(this.props.beads)\n    // var beads = Object.assign({}, this.props.beads);\n    let beads = JSON.parse(JSON.stringify(this.props.beads));\n    var size = 10;\n    console.log(this.props.brushPosition);\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y;\n    // x = this.snap(x, 10);\n    // y = this.snap(y, 10);\n    beads[getBeadHash(x, y)] = (\n      <Bead x={x} y={y} width={size} height={size}/>\n    );\n    this.props.placeBead(beads);\n  }\n\n  _onMouseMove(e) {\n    var size=10;\n    var x = e.clientX - size;\n    var y = e.clientY - size;\n\n    x = this.snap(x, size/2);\n    y = this.snap(y, size);\n    this.props.setBrushPosition({ x: x, y: y });\n  }\n\n  printBeads(){\n    for (var key in this.props.beads) {\n      console.log(this.props.beads[key])\n    }\n    \n    return \"\";\n  }\n\n  render(){\n    console.log(\"render\");\n    return (\n      <div \n        className=\"Canvas\" id=\"canvas\"\n        onMouseMove={this._onMouseMove} \n        // onMouseDown={this.mouseDown}\n        // onMouseUp={this.mouseUp}\n        onClick={this.placeObject}\n      >\n        {this.printBeads()}\n        {this.brush()}\n      </div>\n    );\n  }\n  \n}\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}