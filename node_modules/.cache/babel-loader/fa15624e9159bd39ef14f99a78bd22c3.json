{"ast":null,"code":"var _jsxFileName = \"/home/george/projects/beads/beads/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Canvas from './Canvas.js';\nimport { undo, redo } from '../actions/rootActions';\nimport { render } from '@testing-library/react';\n\nfunction mapStateToProps(state) {\n  return {\n    beads: state.beads,\n    brushPosition: state.brushPosition\n  };\n}\n\n;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    undo: () => dispatch(undo()),\n    redo: () => dispatch(redo())\n  };\n}\n\nclass ConnectedApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Canvas, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(SketchPicker, {\n      onChangeComplete: this.changeColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst App = connect(null, mapDispatchToProps)(ConnectedApp);\nexport default App;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/components/App.js"],"names":["React","Component","connect","Canvas","undo","redo","render","mapStateToProps","state","beads","brushPosition","mapDispatchToProps","dispatch","ConnectedApp","changeColor","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,wBAA3B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,aAAa,EAAEF,KAAK,CAACE;AAFlB,GAAP;AAID;;AAAA;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACHR,IAAAA,IAAI,EAAE,MAAMQ,QAAQ,CAACR,IAAI,EAAL,CADjB;AAEHC,IAAAA,IAAI,EAAE,MAAMO,QAAQ,CAACP,IAAI,EAAL;AAFjB,GAAP;AAID;;AAED,MAAMQ,YAAN,SAA2BZ,SAA3B,CAAqC;AACnCK,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,gBAAgB,EAAE,KAAKQ,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AATkC;;AAYrC,MAAMC,GAAG,GAAGb,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCE,YAAlC,CAAZ;AAEA,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport Canvas from './Canvas.js';\nimport { undo, redo } from '../actions/rootActions';\nimport { render } from '@testing-library/react';\n\nfunction mapStateToProps(state) {\n  return {\n      beads: state.beads,\n      brushPosition: state.brushPosition\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      undo: () => dispatch(undo()),\n      redo: () => dispatch(redo())\n  }\n}\n\nclass ConnectedApp extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Canvas/>\n        <SketchPicker onChangeComplete={this.changeColor}></SketchPicker>\n\n      </div>\n    );\n  }\n  \n}\nconst App = connect(null, mapDispatchToProps)(ConnectedApp);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}