{"ast":null,"code":"var _jsxFileName = \"/home/george/projects/beads/beads/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport './Canvas.css';\nimport { connect } from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition, undo, redo, setActiveColor } from '../actions/rootActions';\nimport { SketchPicker } from 'react-color';\n\nfunction mapStateToProps(state) {\n  return {\n    beads: state.beads,\n    brushPosition: state.brushPosition,\n    activeColor: state.activeColor\n  };\n}\n\n;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    placeBead: beads => dispatch(placeBead(beads)),\n    setBrushPosition: xy => dispatch(setBrushPosition(xy)),\n    undo: () => dispatch(undo()),\n    redo: () => dispatch(redo()),\n    setActiveColor: color => dispatch(setActiveColor(color))\n  };\n}\n\nfunction getBeadHash(x, y) {\n  return x + \" \" + y;\n}\n\nconst beadSize = 20;\nconst snapX = beadSize / 2;\nconst snapY = beadSize;\n\nclass ConnectedCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.intervalId = 0;\n    this.state = {\n      intervalId: 0\n    };\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this.snap = this.snap.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n  }\n\n  checkCollisions(x, y, snapX, snapY) {\n    const beads = this.props.beads;\n    const center = beads[getBeadHash(x, y)];\n    const topLeft = beads[getBeadHash(x - snapX, y - snapY)];\n    const top = beads[getBeadHash(x, y - snapY)];\n    const topRight = beads[getBeadHash(x + snapX, y - snapY)];\n    const right = beads[getBeadHash(x + snapX, y)];\n    const bottomRight = beads[getBeadHash(x + snapX, y + snapY)];\n    const bottom = beads[getBeadHash(x, y + snapY)];\n    const botomLeft = beads[getBeadHash(x - snapX, y + snapY)];\n    const left = beads[getBeadHash(x - snapX, y)];\n    return center || left || right; // topLeft || top || topRight || right || bottomRight || bottomRight || botomLeft || left || bottom;\n  }\n\n  snap(numToRound, multiple) {\n    if (multiple == 0) return numToRound;\n    var remainder = numToRound % multiple;\n    if (remainder == 0) return numToRound;\n    return numToRound + multiple - remainder;\n  }\n\n  brush() {\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y;\n    return React.createElement(Bead, {\n      x: x,\n      y: y,\n      width: beadSize,\n      height: beadSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n  mouseDown() {\n    this.setState({\n      intervalId: setInterval(this.placeObject, 100)\n    });\n  }\n\n  mouseUp() {\n    clearInterval(this.state.intervalId);\n  }\n\n  placeObject(e) {\n    if (e.type == \"mousedown\") {\n      let beads = Object.assign({}, this.props.beads);\n      var x = this.props.brushPosition.x;\n      var y = this.props.brushPosition.y;\n\n      if (!this.checkCollisions(x, y, snapX, snapY)) {\n        console.log(\"placeBead\");\n        beads[getBeadHash(x, y)] = React.createElement(Bead, {\n          x: x,\n          y: y,\n          width: beadSize,\n          height: beadSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n        this.props.placeBead(beads);\n      }\n    }\n  }\n\n  _onMouseMove(e) {\n    var x = e.clientX - beadSize;\n    var y = e.clientY - beadSize;\n    x = this.snap(x, beadSize / 2);\n    y = this.snap(y, beadSize);\n    this.props.setBrushPosition({\n      x: x,\n      y: y\n    });\n  }\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      className: \"Wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Canvas\",\n      id: \"canvas\",\n      onMouseMove: this._onMouseMove,\n      onMouseDown: this.placeObject,\n      onMouseUp: this.placeObject,\n      onClick: this.placeObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, Object.values(this.props.beads), this.brush()), React.createElement(\"button\", {\n      onClick: this.props.undo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Undo\"), React.createElement(\"button\", {\n      onClick: this.props.redo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Redo\"), React.createElement(SketchPicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\nexport default Canvas;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/components/Canvas.js"],"names":["React","Component","connect","Bead","placeBead","setBrushPosition","undo","redo","setActiveColor","SketchPicker","mapStateToProps","state","beads","brushPosition","activeColor","mapDispatchToProps","dispatch","xy","color","getBeadHash","x","y","beadSize","snapX","snapY","ConnectedCanvas","constructor","props","intervalId","placeObject","bind","_onMouseMove","snap","mouseUp","mouseDown","checkCollisions","center","topLeft","top","topRight","right","bottomRight","bottom","botomLeft","left","numToRound","multiple","remainder","brush","setState","setInterval","clearInterval","e","type","Object","assign","console","log","clientX","clientY","render","values","Canvas"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Canvas.css';\nimport {connect} from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition, undo, redo, setActiveColor } from '../actions/rootActions';\nimport { SketchPicker } from 'react-color';\n\nfunction mapStateToProps(state) {\n  return {\n      beads: state.beads,\n      brushPosition: state.brushPosition,\n      activeColor: state.activeColor\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      placeBead: (beads) => dispatch(placeBead(beads)),\n      setBrushPosition: (xy) => dispatch(setBrushPosition(xy)),\n      undo: () => dispatch(undo()),\n      redo: () => dispatch(redo()),\n      setActiveColor: (color) => dispatch(setActiveColor(color))\n  }\n}\n\nfunction getBeadHash(x, y){\n  return x + \" \" + y;\n}\n\n\nconst beadSize = 20;\nconst snapX = beadSize/2;\nconst snapY = beadSize;\n\nclass ConnectedCanvas extends Component {\n\n  constructor(props) {\n    super(props);\n    this.intervalId = 0;\n    this.state = { intervalId: 0 };\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this.snap = this.snap.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n  }\n\n  checkCollisions(x, y, snapX, snapY){\n    const beads = this.props.beads;\n    const center = beads[getBeadHash(x, y)];\n    const topLeft = beads[getBeadHash(x-snapX, y-snapY)];\n    const top = beads[getBeadHash(x, y-snapY)];\n    const topRight = beads[getBeadHash(x+snapX, y-snapY)];\n    const right = beads[getBeadHash(x+snapX, y)];\n    const bottomRight = beads[getBeadHash(x+snapX, y+snapY)];\n    const bottom = beads[getBeadHash(x, y+snapY)];\n    const botomLeft = beads[getBeadHash(x-snapX, y+snapY)];\n    const left = beads[getBeadHash(x-snapX, y)];\n    return center || left || right;\n    // topLeft || top || topRight || right || bottomRight || bottomRight || botomLeft || left || bottom;\n  }\n\n  snap(numToRound, multiple)\n  {\n    if (multiple == 0)\n        return numToRound;\n\n    var remainder = numToRound % multiple;\n    if (remainder == 0)\n        return numToRound;\n\n    return numToRound + multiple - remainder;\n  }\n\n  brush(){\n    var x = this.props.brushPosition.x;\n    var y = this.props.brushPosition.y;\n    return (<Bead x={x} y={y} width={beadSize} height={beadSize}/>);\n  }\n\n  mouseDown(){\n    this.setState({intervalId: setInterval(this.placeObject, 100)});\n  }\n\n  mouseUp(){\n    clearInterval(this.state.intervalId);\n  }\n\n  placeObject(e){\n\n    if(e.type == \"mousedown\"){\n      let beads = Object.assign({}, this.props.beads);\n      var x = this.props.brushPosition.x;\n      var y = this.props.brushPosition.y;\n      if(!this.checkCollisions(x, y, snapX, snapY)){\n        console.log(\"placeBead\");\n        beads[getBeadHash(x, y)] = (\n          <Bead x={x} y={y} width={beadSize} height={beadSize}/>\n        );\n        this.props.placeBead(beads);\n      }\n    }\n    \n  }\n\n  _onMouseMove(e) {\n    var x = e.clientX - beadSize;\n    var y = e.clientY - beadSize;\n\n    x = this.snap(x, beadSize/2);\n    y = this.snap(y, beadSize);\n    this.props.setBrushPosition({ x: x, y: y });\n  }\n\n  render(){\n    console.log(\"render\");\n    return (\n      <div className=\"Wrapper\">\n        <div \n          className=\"Canvas\" id=\"canvas\"\n          onMouseMove={this._onMouseMove} \n          onMouseDown={this.placeObject}\n          onMouseUp={this.placeObject}\n          onClick={this.placeObject}\n        >\n          {Object.values(this.props.beads)}\n          {this.brush()}\n        </div>\n        <button onClick={this.props.undo}>Undo</button>\n        <button onClick={this.props.redo}>Redo</button>\n        <SketchPicker></SketchPicker>\n      </div>\n      \n    );\n  }\n  \n}\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}