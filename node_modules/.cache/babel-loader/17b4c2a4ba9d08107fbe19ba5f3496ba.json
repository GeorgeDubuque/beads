{"ast":null,"code":"import _objectSpread from \"/home/george/projects/beads/beads/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  beads: {},\n  brushPosition: {\n    x: 0,\n    y: 0\n  },\n  history: [],\n  histNum: 0 // transactions: [],\n  // totalCash: 0\n\n};\n\nconst rootReducer = (state = initialState, action) => {\n  var histNum = 0;\n\n  switch (action.type) {\n    case PLACE_BEAD:\n      return _objectSpread({}, state, {\n        beads: action.payload\n      });\n\n    case SET_BRUSH_POSITION:\n      return _objectSpread({}, state, {\n        brushPosition: action.payload\n      });\n\n    case REDO:\n      if (histNum < state.history.length) {\n        histNum = state.histNum;\n        histNum = histNum + 1;\n        const newState = state.history[histNum];\n        return newState;\n      } else {\n        return state;\n      }\n\n    case UNDO:\n      if (histNum > 0) {\n        histNum = state.histNum;\n        histNum = histNum - 1;\n        const newState = state.history[histNum];\n        return newState;\n      } else {\n        return state;\n      }\n\n    case ADD_STATE:\n      const history = state.history;\n      const histNum = state.histNum;\n      history.splice(histNum, 0, action.payload);\n      return _objectSpread({}, state, {\n        history: history\n      });\n    // case SPENDING_CHART_DATA_CHANGE:\n    //     return {\n    //         ...state,\n    //         pieChartData: action.payload\n    //     };\n    // case SET_TRANSACTIONS:\n    //     return {\n    //         ...state,\n    //         transactions: action.payload\n    //     }\n    // case SET_TOTAL_CASH:\n    //     return {\n    //         ...state,\n    //         totalCash: action.payload\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/reducers/rootReducer.js"],"names":["PLACE_BEAD","SET_BRUSH_POSITION","REDO","UNDO","ADD_STATE","act","initialState","beads","brushPosition","x","y","history","histNum","rootReducer","state","action","type","payload","length","newState","splice"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqDC,SAArD,QAAsE,wBAAtE;AACA,SAASC,GAAT,QAAoB,sBAApB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAFE;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,OAAO,EAAE,CAJQ,CAKjB;AACA;;AANiB,CAArB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,MAAIH,OAAO,GAAG,CAAd;;AACA,UAAOG,MAAM,CAACC,IAAd;AACI,SAAKhB,UAAL;AACI,+BACOc,KADP;AAEIP,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAFlB;;AAIJ,SAAKhB,kBAAL;AACI,+BACOa,KADP;AAEIN,QAAAA,aAAa,EAAEO,MAAM,CAACE;AAF1B;;AAIJ,SAAKf,IAAL;AACI,UAAGU,OAAO,GAAGE,KAAK,CAACH,OAAN,CAAcO,MAA3B,EAAkC;AAC9BN,QAAAA,OAAO,GAAGE,KAAK,CAACF,OAAhB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA,cAAMO,QAAQ,GAAGL,KAAK,CAACH,OAAN,CAAcC,OAAd,CAAjB;AACA,eAAOO,QAAP;AACH,OALD,MAKK;AACD,eAAOL,KAAP;AACH;;AACL,SAAKX,IAAL;AACI,UAAGS,OAAO,GAAG,CAAb,EAAe;AACXA,QAAAA,OAAO,GAAGE,KAAK,CAACF,OAAhB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA,cAAMO,QAAQ,GAAGL,KAAK,CAACH,OAAN,CAAcC,OAAd,CAAjB;AACA,eAAOO,QAAP;AACH,OALD,MAKK;AACD,eAAOL,KAAP;AACH;;AAEL,SAAKV,SAAL;AACI,YAAMO,OAAO,GAAGG,KAAK,CAACH,OAAtB;AACA,YAAMC,OAAO,GAAGE,KAAK,CAACF,OAAtB;AACAD,MAAAA,OAAO,CAACS,MAAR,CAAeR,OAAf,EAAwB,CAAxB,EAA2BG,MAAM,CAACE,OAAlC;AACA,+BACOH,KADP;AAEIH,QAAAA,OAAO,EAAEA;AAFb;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOG,KAAP;AAvDR;AAyDH,CA3DD;;AA4DA,eAAeD,WAAf","sourcesContent":["import { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\n\n\nconst initialState = {\n    beads: {},\n    brushPosition: {x: 0, y: 0},\n    history: [],\n    histNum: 0\n    // transactions: [],\n    // totalCash: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n    var histNum = 0;\n    switch(action.type) {\n        case PLACE_BEAD:\n            return {\n                ...state,\n                beads: action.payload\n            };\n        case SET_BRUSH_POSITION:\n            return{\n                ...state,\n                brushPosition: action.payload\n            };\n        case REDO:\n            if(histNum < state.history.length){\n                histNum = state.histNum;\n                histNum = histNum + 1;\n                const newState = state.history[histNum];\n                return newState;\n            }else{\n                return state;\n            }\n        case UNDO:\n            if(histNum > 0){\n                histNum = state.histNum;\n                histNum = histNum - 1;\n                const newState = state.history[histNum];\n                return newState;\n            }else{\n                return state;\n            }\n            \n        case ADD_STATE:\n            const history = state.history;\n            const histNum = state.histNum;\n            history.splice(histNum, 0, action.payload);\n            return {\n                ...state,\n                history: history\n            }\n            \n        // case SPENDING_CHART_DATA_CHANGE:\n        //     return {\n        //         ...state,\n        //         pieChartData: action.payload\n        //     };\n        // case SET_TRANSACTIONS:\n        //     return {\n        //         ...state,\n        //         transactions: action.payload\n        //     }\n        // case SET_TOTAL_CASH:\n        //     return {\n        //         ...state,\n        //         totalCash: action.payload\n        //     }\n        default:\n            return state;\n    }\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}