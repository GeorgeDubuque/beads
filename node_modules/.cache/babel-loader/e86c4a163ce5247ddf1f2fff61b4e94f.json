{"ast":null,"code":"var _jsxFileName = \"/home/george/projects/beads/beads/src/components/Bead.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MOUSE_HELD } from '../constants/constants';\n\nfunction mapStateToProps(state) {\n  return {\n    activeColor: state.activeColor,\n    mouseStatus: state.mouseStatus\n  };\n}\n\n;\n\nclass ConnectedBead extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mouseHeld: false,\n      color: this.props.color\n    };\n    this.reColor = this.reColor.bind(this);\n  }\n\n  reColor(e) {\n    console.log(e);\n\n    if (this.props.mouseStatus == MOUSE_HELD && this.props.activeColor !== this.props.color) {\n      console.log(\"reColor: \" + this.props.activeColor);\n      this.setState({\n        color: this.props.activeColor\n      });\n    }\n  }\n\n  render() {\n    console.log(\"renderingBead\");\n    const color = this.state.color;\n    return React.createElement(\"div\", {\n      className: \"object\",\n      style: {\n        left: this.props.x,\n        top: this.props.y,\n        width: this.props.width,\n        height: this.props.height,\n        borderRadius: 100,\n        backgroundColor: color,\n        position: \"absolute\",\n        padding: 0,\n        margin: 0\n      },\n      onClick: this.reColor,\n      onMouseOver: this.reColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst Bead = connect(mapStateToProps)(ConnectedBead);\nexport default Bead;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/components/Bead.js"],"names":["React","Component","connect","MOUSE_HELD","mapStateToProps","state","activeColor","mouseStatus","ConnectedBead","constructor","props","mouseHeld","color","reColor","bind","e","console","log","setState","render","left","x","top","y","width","height","borderRadius","backgroundColor","position","padding","margin","Bead"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,WAAW,EAAEF,KAAK,CAACE;AAFhB,GAAP;AAID;;AAAA;;AAED,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAEpCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKL,KAAL,GAAa;AAAEM,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAtC,KAAb;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDD,EAAAA,OAAO,CAACE,CAAD,EAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,QAAG,KAAKL,KAAL,CAAWH,WAAX,IAA0BJ,UAA1B,IAAyC,KAAKO,KAAL,CAAWJ,WAAX,KAA2B,KAAKI,KAAL,CAAWE,KAAlF,EAAwF;AACtFI,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAKP,KAAL,CAAWJ,WAArC;AACA,WAAKY,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWJ;AAAnB,OAAd;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAML,KAAK,GAAG,KAAKP,KAAL,CAAWO,KAAzB;AACA,WACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE;AACLQ,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,CADZ;AAELC,QAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWa,CAFX;AAGLC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KAHb;AAILC,QAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWe,MAJd;AAKLC,QAAAA,YAAY,EAAE,GALT;AAMLC,QAAAA,eAAe,EAAEf,KANZ;AAOLgB,QAAAA,QAAQ,EAAE,UAPL;AAQLC,QAAAA,OAAO,EAAE,CARJ;AASLC,QAAAA,MAAM,EAAE;AATH,OAFT;AAaE,MAAA,OAAO,EAAE,KAAKjB,OAbhB;AAcE,MAAA,WAAW,EAAE,KAAKA,OAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAoBD;;AAvCmC;;AA0CtC,MAAMkB,IAAI,GAAG7B,OAAO,CAACE,eAAD,CAAP,CAAyBI,aAAzB,CAAb;AAEA,eAAeuB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MOUSE_HELD } from '../constants/constants';\n\nfunction mapStateToProps(state) {\n  return {\n      activeColor: state.activeColor,\n      mouseStatus: state.mouseStatus\n  };\n};\n\nclass ConnectedBead extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = { mouseHeld: false, color: this.props.color };\n    this.reColor = this.reColor.bind(this);\n  }\n\n  reColor(e){\n    console.log(e);\n    if(this.props.mouseStatus == MOUSE_HELD  && this.props.activeColor !== this.props.color){\n      console.log(\"reColor: \" + this.props.activeColor)\n      this.setState({color: this.props.activeColor})\n    }\n  }\n\n  render() {\n    console.log(\"renderingBead\");\n    const color = this.state.color;\n    return (\n      <div \n        className=\"object\"\n        style={{\n          left: this.props.x, \n          top: this.props.y,\n          width: this.props.width,\n          height: this.props.height,\n          borderRadius: 100,\n          backgroundColor: color,\n          position: \"absolute\",\n          padding: 0,\n          margin: 0\n        }}\n        onClick={this.reColor}\n        onMouseOver={this.reColor}\n      >\n\n      </div>\n    )\n  }\n}\n\nconst Bead = connect(mapStateToProps)(ConnectedBead);\n\nexport default Bead;"]},"metadata":{},"sourceType":"module"}