{"ast":null,"code":"var _jsxFileName = \"/home/george/projects/beads/beads/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport './Canvas.css';\nimport { connect } from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition } from '../actions/rootActions';\n\nfunction mapStateToProps(state) {\n  return {\n    beads: state.beads,\n    brushPosition: state.brushPosition\n  };\n}\n\n;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    placeBead: beads => dispatch(placeBead(beads)),\n    setBrushPosition: xy => dispatch(setBrushPosition(xy))\n  };\n}\n\nclass ConnectedCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: 0,\n      y: 0\n    };\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n  }\n\n  placeObject() {\n    var beads = this.props.beads.slice();\n    var size = 10;\n    console.log(this.props.brushPosition);\n    var x = this.props.brushPosition.x - size;\n    var y = this.props.brushPosition.y - size;\n    console.log(\"place bead: \" + beads.length);\n    beads.push(React.createElement(Bead, {\n      x: x,\n      y: y,\n      width: size,\n      height: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n    this.props.placeBead(beads);\n  }\n\n  _onMouseMove(e) {\n    this.setBrushPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      className: \"Canvas\",\n      id: \"canvas\",\n      onMouseMove: this._onMouseMove,\n      onClick: this.placeObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.beads);\n  }\n\n}\n\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\nexport default Canvas;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/components/Canvas.js"],"names":["React","Component","connect","Bead","placeBead","setBrushPosition","mapStateToProps","state","beads","brushPosition","mapDispatchToProps","dispatch","xy","ConnectedCanvas","constructor","props","x","y","placeObject","bind","_onMouseMove","slice","size","console","log","length","push","e","clientX","clientY","render","Canvas"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,wBAA5C;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,aAAa,EAAEF,KAAK,CAACE;AAFlB,GAAP;AAID;;AAAA;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACHP,IAAAA,SAAS,EAAGI,KAAD,IAAWG,QAAQ,CAACP,SAAS,CAACI,KAAD,CAAV,CAD3B;AAEHH,IAAAA,gBAAgB,EAAGO,EAAD,IAAQD,QAAQ,CAACN,gBAAgB,CAACO,EAAD,CAAjB;AAF/B,GAAP;AAID;;AAED,MAAMC,eAAN,SAA8BZ,SAA9B,CAAwC;AAEtCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKR,KAAL,GAAa;AAAES,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,WAAW,GAAE;AACX,QAAIV,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAX,CAAiBa,KAAjB,EAAZ;AACA,QAAIC,IAAI,GAAG,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWN,aAAvB;AACA,QAAIO,CAAC,GAAG,KAAKD,KAAL,CAAWN,aAAX,CAAyBO,CAAzB,GAA8BM,IAAtC;AACA,QAAIL,CAAC,GAAG,KAAKF,KAAL,CAAWN,aAAX,CAAyBQ,CAAzB,GAA8BK,IAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBhB,KAAK,CAACiB,MAAnC;AACAjB,IAAAA,KAAK,CAACkB,IAAN,CACE,oBAAC,IAAD;AAAM,MAAA,CAAC,EAAEV,CAAT;AAAY,MAAA,CAAC,EAAEC,CAAf;AAAkB,MAAA,KAAK,EAAEK,IAAzB;AAA+B,MAAA,MAAM,EAAEA,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGA,SAAKP,KAAL,CAAWX,SAAX,CAAqBI,KAArB;AACD;;AAEDY,EAAAA,YAAY,CAACO,CAAD,EAAI;AAEd,SAAKtB,gBAAL,CAAsB;AAAEW,MAAAA,CAAC,EAAEW,CAAC,CAACC,OAAP;AAAgBX,MAAAA,CAAC,EAAEU,CAAC,CAACE;AAArB,KAAtB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACNP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WACE;AACE,MAAA,SAAS,EAAC,QADZ;AACqB,MAAA,EAAE,EAAC,QADxB;AAEE,MAAA,WAAW,EAAE,KAAKJ,YAFpB;AAGE,MAAA,OAAO,EAAE,KAAKF,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKH,KAAL,CAAWP,KALd,CADF;AASD;;AAvCqC;;AA0CxC,MAAMuB,MAAM,GAAG7B,OAAO,CAACI,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,eAA7C,CAAf;AAEA,eAAekB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Canvas.css';\nimport {connect} from 'react-redux';\nimport Bead from './Bead';\nimport { placeBead, setBrushPosition } from '../actions/rootActions';\n\nfunction mapStateToProps(state) {\n  return {\n      beads: state.beads,\n      brushPosition: state.brushPosition\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      placeBead: (beads) => dispatch(placeBead(beads)),\n      setBrushPosition: (xy) => dispatch(setBrushPosition(xy))\n  }\n}\n\nclass ConnectedCanvas extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { x: 0, y: 0};\n    this.placeObject = this.placeObject.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this)\n  }\n\n  placeObject(){\n    var beads = this.props.beads.slice();\n    var size = 10;\n    console.log(this.props.brushPosition);\n    var x = this.props.brushPosition.x - (size);\n    var y = this.props.brushPosition.y - (size);\n    console.log(\"place bead: \" + beads.length);\n    beads.push(\n      <Bead x={x} y={y} width={size} height={size}/>\n    );\n    this.props.placeBead(beads);\n  }\n\n  _onMouseMove(e) {\n    \n    this.setBrushPosition({ x: e.clientX, y: e.clientY });\n  }\n\n  render(){\n    console.log(\"render\");\n    return (\n      <div \n        className=\"Canvas\" id=\"canvas\"\n        onMouseMove={this._onMouseMove} \n        onClick={this.placeObject}\n      >\n        {this.props.beads}\n      </div>\n    );\n  }\n  \n}\nconst Canvas = connect(mapStateToProps, mapDispatchToProps)(ConnectedCanvas);\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}