{"ast":null,"code":"import _objectSpread from \"/home/george/projects/beads/beads/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE, SET_ACTIVE_COLOR } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  beads: {},\n  brushPosition: {\n    x: 0,\n    y: 0\n  },\n  history: [],\n  histNum: 0,\n  activeColor: \"#000000\" // transactions: [],\n  // totalCash: 0\n\n};\n\nconst rootReducer = (state = initialState, action) => {\n  let newState = state;\n\n  switch (action.type) {\n    case PLACE_BEAD:\n      newState = _objectSpread({}, state, {\n        beads: action.payload\n      });\n      const history = state.history;\n      var histNum = state.histNum;\n      history.splice(histNum, 0, newState);\n      history.join();\n      histNum += 1;\n      newState = _objectSpread({}, newState, {\n        history: history,\n        histNum: histNum\n      });\n      break;\n\n    case SET_BRUSH_POSITION:\n      newState = _objectSpread({}, state, {\n        brushPosition: action.payload\n      });\n      break;\n\n    case REDO:\n      if (state.histNum < state.history.length - 1) {\n        var histNum = state.histNum;\n        histNum = histNum + 1;\n        newState = state.history[histNum];\n        newState = _objectSpread({}, newState, {\n          histNum: histNum\n        });\n      }\n\n      break;\n\n    case UNDO:\n      if (state.histNum > 0) {\n        var histNum = state.histNum;\n        histNum = histNum - 1;\n        newState = state.history[histNum];\n        newState = _objectSpread({}, newState, {\n          histNum: histNum\n        });\n      }\n\n      break;\n\n    case SET_ACTIVE_COLOR:\n      newState = _objectSpread({}, state, {\n        activeColor: action.payload\n      });\n\n    default:\n      break;\n    // return state;\n  }\n\n  return newState;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/reducers/rootReducer.js"],"names":["PLACE_BEAD","SET_BRUSH_POSITION","REDO","UNDO","ADD_STATE","SET_ACTIVE_COLOR","act","initialState","beads","brushPosition","x","y","history","histNum","activeColor","rootReducer","state","action","newState","type","payload","splice","join","length"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqDC,SAArD,EAAgEC,gBAAhE,QAAwF,wBAAxF;AACA,SAASC,GAAT,QAAoB,sBAApB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAFE;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,OAAO,EAAE,CAJQ;AAKjBC,EAAAA,WAAW,EAAE,SALI,CAMjB;AACA;;AAPiB,CAArB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAClD,MAAIC,QAAQ,GAAGF,KAAf;;AACA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAKnB,UAAL;AAEIkB,MAAAA,QAAQ,qBACDF,KADC;AAEJR,QAAAA,KAAK,EAAES,MAAM,CAACG;AAFV,QAAR;AAKA,YAAMR,OAAO,GAAGI,KAAK,CAACJ,OAAtB;AACA,UAAIC,OAAO,GAAGG,KAAK,CAACH,OAApB;AACAD,MAAAA,OAAO,CAACS,MAAR,CAAeR,OAAf,EAAwB,CAAxB,EAA2BK,QAA3B;AACAN,MAAAA,OAAO,CAACU,IAAR;AACAT,MAAAA,OAAO,IAAI,CAAX;AAEAK,MAAAA,QAAQ,qBACDA,QADC;AAEJN,QAAAA,OAAO,EAAEA,OAFL;AAGJC,QAAAA,OAAO,EAAEA;AAHL,QAAR;AAKA;;AACJ,SAAKZ,kBAAL;AACIiB,MAAAA,QAAQ,qBACDF,KADC;AAEJP,QAAAA,aAAa,EAAEQ,MAAM,CAACG;AAFlB,QAAR;AAIA;;AACJ,SAAKlB,IAAL;AACI,UAAGc,KAAK,CAACH,OAAN,GAAgBG,KAAK,CAACJ,OAAN,CAAcW,MAAd,GAAqB,CAAxC,EAA0C;AACtC,YAAIV,OAAO,GAAGG,KAAK,CAACH,OAApB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAK,QAAAA,QAAQ,GAAGF,KAAK,CAACJ,OAAN,CAAcC,OAAd,CAAX;AACAK,QAAAA,QAAQ,qBACDA,QADC;AAEJL,UAAAA,OAAO,EAAEA;AAFL,UAAR;AAIH;;AACD;;AACJ,SAAKV,IAAL;AACI,UAAGa,KAAK,CAACH,OAAN,GAAgB,CAAnB,EAAqB;AACjB,YAAIA,OAAO,GAAGG,KAAK,CAACH,OAApB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAK,QAAAA,QAAQ,GAAGF,KAAK,CAACJ,OAAN,CAAcC,OAAd,CAAX;AACAK,QAAAA,QAAQ,qBACDA,QADC;AAEJL,UAAAA,OAAO,EAAEA;AAFL,UAAR;AAIH;;AACD;;AACJ,SAAKR,gBAAL;AACIa,MAAAA,QAAQ,qBACDF,KADC;AAEJF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFhB,QAAR;;AAIJ;AACI;AACA;AAvDR;;AA0DA,SAAOF,QAAP;AACH,CA7DD;;AA8DA,eAAeH,WAAf","sourcesContent":["import { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE, SET_ACTIVE_COLOR } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\n\n\nconst initialState = {\n    beads: {},\n    brushPosition: {x: 0, y: 0},\n    history: [],\n    histNum: 0,\n    activeColor: \"#000000\"\n    // transactions: [],\n    // totalCash: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n    let newState = state;\n    switch(action.type) {\n        case PLACE_BEAD:\n            \n            newState = {\n                ...state,\n                beads: action.payload\n            };\n\n            const history = state.history;\n            var histNum = state.histNum;\n            history.splice(histNum, 0, newState);\n            history.join();\n            histNum += 1;\n\n            newState = {\n                ...newState,\n                history: history,\n                histNum: histNum\n            }\n            break;\n        case SET_BRUSH_POSITION:\n            newState ={\n                ...state,\n                brushPosition: action.payload\n            };\n            break;\n        case REDO:\n            if(state.histNum < state.history.length-1){\n                var histNum = state.histNum;\n                histNum = histNum + 1;\n                newState = state.history[histNum];\n                newState = {\n                    ...newState,\n                    histNum: histNum\n                }\n            }\n            break;\n        case UNDO:\n            if(state.histNum > 0){\n                var histNum = state.histNum;\n                histNum = histNum - 1;\n                newState = state.history[histNum];\n                newState = {\n                    ...newState,\n                    histNum: histNum\n                }\n            }\n            break;\n        case SET_ACTIVE_COLOR:\n            newState = {\n                ...state,\n                activeColor: action.payload\n            }\n        default:\n            break;\n            // return state;\n    }\n    \n    return newState;\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}