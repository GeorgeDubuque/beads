{"ast":null,"code":"import _objectSpread from \"/home/george/projects/beads/beads/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  beads: {},\n  brushPosition: {\n    x: 0,\n    y: 0\n  },\n  history: [],\n  histNum: 0 // transactions: [],\n  // totalCash: 0\n\n};\n\nconst rootReducer = (state = initialState, action) => {\n  console.log(\"reduce\");\n  let newState = state;\n\n  switch (action.type) {\n    case PLACE_BEAD:\n      newState = _objectSpread({}, state, {\n        beads: action.payload\n      });\n      break;\n\n    case SET_BRUSH_POSITION:\n      newState = _objectSpread({}, state, {\n        brushPosition: action.payload\n      });\n      break;\n\n    case REDO:\n      if (state.histNum < state.history.length) {\n        var histNum = state.histNum;\n        histNum = histNum + 1;\n        newState = state.history[histNum];\n      }\n\n      break;\n\n    case UNDO:\n      if (state.histNum > 0) {\n        var histNum = state.histNum;\n        histNum = histNum - 1;\n        newState = state.history[histNum];\n      }\n\n      break;\n    // case ADD_STATE:\n    //     const history = state.history;\n    //     const histNum = state.histNum;\n    //     history.splice(histNum, 0, action.payload);\n    //     history.join();\n    //     console.log(history)\n    //     return {\n    //         ...state,\n    //         history: history\n    //     }\n    // case SPENDING_CHART_DATA_CHANGE:\n    //     return {\n    //         ...state,\n    //         pieChartData: action.payload\n    //     };\n    // case SET_TRANSACTIONS:\n    //     return {\n    //         ...state,\n    //         transactions: action.payload\n    //     }\n    // case SET_TOTAL_CASH:\n    //     return {\n    //         ...state,\n    //         totalCash: action.payload\n    //     }\n\n    default:\n      break;\n    // return state;\n  }\n\n  console.log(newState);\n  return newState;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/george/projects/beads/beads/src/reducers/rootReducer.js"],"names":["PLACE_BEAD","SET_BRUSH_POSITION","REDO","UNDO","ADD_STATE","act","initialState","beads","brushPosition","x","y","history","histNum","rootReducer","state","action","console","log","newState","type","payload","length"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqDC,SAArD,QAAsE,wBAAtE;AACA,SAASC,GAAT,QAAoB,sBAApB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAFE;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,OAAO,EAAE,CAJQ,CAKjB;AACA;;AANiB,CAArB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,MAAIC,QAAQ,GAAGJ,KAAf;;AACA,UAAOC,MAAM,CAACI,IAAd;AACI,SAAKnB,UAAL;AACIkB,MAAAA,QAAQ,qBACDJ,KADC;AAEJP,QAAAA,KAAK,EAAEQ,MAAM,CAACK;AAFV,QAAR;AAIA;;AACJ,SAAKnB,kBAAL;AACIiB,MAAAA,QAAQ,qBACDJ,KADC;AAEJN,QAAAA,aAAa,EAAEO,MAAM,CAACK;AAFlB,QAAR;AAIA;;AACJ,SAAKlB,IAAL;AACI,UAAGY,KAAK,CAACF,OAAN,GAAgBE,KAAK,CAACH,OAAN,CAAcU,MAAjC,EAAwC;AACpC,YAAIT,OAAO,GAAGE,KAAK,CAACF,OAApB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAM,QAAAA,QAAQ,GAAGJ,KAAK,CAACH,OAAN,CAAcC,OAAd,CAAX;AACH;;AACD;;AACJ,SAAKT,IAAL;AACI,UAAGW,KAAK,CAACF,OAAN,GAAgB,CAAnB,EAAqB;AACjB,YAAIA,OAAO,GAAGE,KAAK,CAACF,OAApB;AACAA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAM,QAAAA,QAAQ,GAAGJ,KAAK,CAACH,OAAN,CAAcC,OAAd,CAAX;AACH;;AACD;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI;AACA;AAxDR;;AA0DAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,SAAOA,QAAP;AACH,CA/DD;;AAgEA,eAAeL,WAAf","sourcesContent":["import { PLACE_BEAD, SET_BRUSH_POSITION, REDO, UNDO, ADD_STATE } from \"../constants/constants\";\nimport { act } from \"react-dom/test-utils\";\n\n\nconst initialState = {\n    beads: {},\n    brushPosition: {x: 0, y: 0},\n    history: [],\n    histNum: 0\n    // transactions: [],\n    // totalCash: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n    console.log(\"reduce\");\n    let newState = state;\n    switch(action.type) {\n        case PLACE_BEAD:\n            newState = {\n                ...state,\n                beads: action.payload\n            };\n            break;\n        case SET_BRUSH_POSITION:\n            newState ={\n                ...state,\n                brushPosition: action.payload\n            };\n            break;\n        case REDO:\n            if(state.histNum < state.history.length){\n                var histNum = state.histNum;\n                histNum = histNum + 1;\n                newState = state.history[histNum];\n            }\n            break;\n        case UNDO:\n            if(state.histNum > 0){\n                var histNum = state.histNum;\n                histNum = histNum - 1;\n                newState = state.history[histNum];\n            }\n            break;\n            \n        // case ADD_STATE:\n        //     const history = state.history;\n        //     const histNum = state.histNum;\n        //     history.splice(histNum, 0, action.payload);\n        //     history.join();\n        //     console.log(history)\n        //     return {\n        //         ...state,\n        //         history: history\n        //     }\n            \n        // case SPENDING_CHART_DATA_CHANGE:\n        //     return {\n        //         ...state,\n        //         pieChartData: action.payload\n        //     };\n        // case SET_TRANSACTIONS:\n        //     return {\n        //         ...state,\n        //         transactions: action.payload\n        //     }\n        // case SET_TOTAL_CASH:\n        //     return {\n        //         ...state,\n        //         totalCash: action.payload\n        //     }\n        default:\n            break;\n            // return state;\n    }\n    console.log(newState);\n    return newState;\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}